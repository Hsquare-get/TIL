전공생들을 잡으려면
기술을 바닥부터 이해하기보다 활용할 수 있는 것이 더 중요하다

텐서플로우 = 머신러닝 프레임워크

======================================================
목표를 잡기 위해서 해야할 것들
<학습 공식>
채용공고 - 내가 가진 것 = *내가 없는 것 = *학습해야할 것
---> 그 직군에서 어떤 기술스택들이 필요한지보고 부족해보이는 부분을 채우기

학습한 것을 한발 더 나아가서 찾아보고 학습해보기
DB는 과연뭘까? MOOC을 활용하여 DB에 대해 공부하고 커밋을 남겨보는 것

#기술 트렌드 (트렌드에 민감해지기)
민감 == 학습 == 결과물 == 프로젝트 == Github

#웹사이트 프로젝트를 만들었다면 배포해보자

#나도 영화를 좋아하니까 kobis 홈페이지에서 데이터를 가져와서 해볼 수 있는 개인프로젝트 생각해보기
#코로나 시대에 겹쳐 영화산업이 어려워진 상황임을 생각해서 서비스할 수 있는 것을 생각해보자

깃을 통해 나의 코드를 관리하자

블로그에 기록했던것을 옮길수 있는지??
갯츠비 = 깃에 있는거 블로그형식으로 만들 수 있다

#마크다운

1. GIT 검색후 설치
2. typora.io 에서 typora(windows) 설치
3. 구글 마크다운 검색 후 HEROPY 블로그 방문
4. 다른사람들의 마크다운 문서를 많이 보는 것이 도움이 된다 
https://github.com/ejolie
https://github.com/jiwookseo

GUI - Graphic User Interface
CLI - Command Line Interface

===========================================================
1. Git은 폴더 단위로 파일을 관리

2. 관리관련 내용은 .git/ 폴더 안에 저장됨 
($ git init <--- .git/ 폴더가 생성되고 깃으로 관리되는 관련내용들이 저장된다)
.git/ 폴더가 있느냐 없느냐를 기준으로 관리된다

3. git 상태를 저장 == commit 
$ git add 로 사진대 위에 파일 또는 폴더를 올려두는 작업을 수행
개별사진을 찍는 행위가 commit이고 사진을 찍으면서 하나의 버전을 생성한다는 개념.
commit 하기 전에 누구인지를 먼저 알려줘야한다. (깃허브 가입한 이메일로 사용자 정보등록)
$ git commit -m "first commit" : 첫번째 커밋이라는 메시지
$ git log : 스냅샷을 찍은 사용자, 날짜 정보 제공
$ git checkout 버전번호 : 이전 버전을 보러간다
$ git checkout master : 현재로 돌아온다

$ git remote add 주소의이름(별명_origin) 실제주소의URL : 원격으로 저장소를 추가
$ git push origin master : 로컬컴퓨터가 아니라 원격저장하기 위해 push

4. SCM(Source Code Management)

5. VCS(Version Control System)
==========================================================
1. $ git init
- $ git status
*2. $ git add
*3. $ git commit
4. $ git log
*5. $ git push
==========================================================
저장소 repository는 강의장(~campus)과 Github(homework) 주소이름은 달라도 된다
==========================================================
(집에서) git bash와 typora는 설치되어있어야한다 
1. github에서 코드눌러 복사해온다음에 $git clone https://github.com/Hsquare-get/homework.git
clone은 처음 한번만 수행해준다 이미 repository가 이미 생성이 됐을 때는 해줄 필요가 없다

push - clone - push - pull
==========================================================
1. 01_Github_TIL.pdf 를 마크다운으로해서 02_git.md로 변경
2. 새로운 폴더 TIL 만들어서 ~/TIL 에 00markdownbasic.md 01CLI.md 02_git.md 저장 
3. github에 TIL 저장소 생성 후 push
4. [집에가서] TIL 저장소 clone 후 , README.md 작업 후 push까지 해야한다
